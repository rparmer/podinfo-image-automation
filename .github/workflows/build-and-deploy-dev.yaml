name: build-and-deploy-dev

on:
  workflow_dispatch:
  push:
    branches: [main]
    # Publish semver tags as releases.
    tags: ['v*.*.*']
    paths:
      - Dockerfile
      - 'app/**'
  pull_request:
    branches: [main]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,suffix=-{{date 'X'}},event=branch
            type=ref,event=tag
            type=ref,event=pr

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  kustomize:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate base kustomization
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '4.5.5'
          kustomize_build_dir: 'app'
          kustomize_output_file: "app.yaml"
      - name: Upload app.yaml
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: app.yaml
          retention-days: 5
  release-dev:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [kustomize]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: release
          token: ${{ secrets.PAT_TOKEN }}
      - name: Download app.yaml
        uses: actions/download-artifact@v3
        with:
          name: app
      - name: Set up environment vars
        run: |
          git config user.name Russ Parmer
          git config user.email rparmer02@gmail.com
      - name: Release to dev
        env:
          RELEASE: ${{ github.ref_name }}
        run: |
          mv app.yaml dev/app.yaml
          git add dev/app.yaml
          git diff-index --quiet HEAD || git commit -m "Release $RELEASE to dev"
          git push
  docker-cleanup:
    needs: [docker]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      uses: snok/container-retention-policy@v1
      with:
        image-names: ${{ github.event.repository.name }}
        cut-off: now UTC
        timestamp-to-use: created_at
        account-type: personal
        keep-at-least: 3
        skip-tags: latest, v*
        token: ${{ secrets.PAT_TOKEN }}
